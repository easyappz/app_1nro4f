openapi: 3.0.3
info:
  title: Listings and Comments API
  version: 1.3.0
  description: API for resolving Avito listings, deduplicating by avitoId, tracking popularity, and managing comments with likes.
servers:
  - url: /api
paths:
  /hello:
    get:
      summary: Health hello message
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                message: Hello from API!
        '500':
          description: Server error
          content:
            application/json:
              example:
                error:
                  message: Internal error
                  details: Failed to handle /hello
  /status:
    get:
      summary: Service status
      responses:
        '200':
          description: OK
          content:
            application/json:
              example:
                status: ok
                timestamp: 2025-01-01T00:00:00.000Z
                uptimeSec: 123
        '500':
          description: Server error
          content:
            application/json:
              example:
                error:
                  message: Internal error
                  details: Failed to handle /status
  /listings/resolve:
    post:
      summary: Resolve listing by Avito URL, normalize and deduplicate by avitoId
      description: |
        Accepts an original Avito URL, fetches details (title, mainImageUrl, canonicalUrl),
        determines avitoId, and either links to an existing listing or creates a new one.
        Returns Listing with avitoId and mainImageUrl so the client can display the main image.
        Deduplication is deterministic by avitoId: existing listing returns 200, new returns 201.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [url]
              properties:
                url:
                  type: string
                  example: https://www.avito.ru/moskva/bytovaya_elektronika/iphone_14_pro_256gb_123456789
      responses:
        '200':
          description: Listing already exists (found by avitoId or legacy URL)
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Listing'
              example:
                data:
                  _id: 6710b8f2f1a5b0a9f3e1c123
                  url: https://www.avito.ru/moskva/bytovaya_elektrоника/iphone_14_pro_256gb_123456789
                  canonicalUrl: https://www.avito.ru/moskva/iphone_14_pro_256gb_123456789
                  avitoId: '123456789'
                  mainImageUrl: https://example.cdn.avito.ru/images/123456789.jpg
                  title: iPhone 14 Pro 256GB
                  viewsCount: 12
                  createdAt: 2025-10-14T12:00:00.000Z
                  updatedAt: 2025-10-14T12:30:00.000Z
        '201':
          description: Listing created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Listing'
              example:
                data:
                  _id: 6710b900f1a5b0a9f3e1c456
                  url: https://www.avito.ru/moskva/iphone_14_pro_256gb_987654321
                  canonicalUrl: https://www.avito.ru/moskva/iphone_14_pro_256gb_987654321
                  avitoId: '987654321'
                  mainImageUrl: https://example.cdn.avito.ru/images/987654321.jpg
                  title: iPhone 14 Pro 256GB (New)
                  viewsCount: 0
                  createdAt: 2025-10-14T12:35:00.000Z
                  updatedAt: 2025-10-14T12:35:00.000Z
        '400':
          description: Bad request (invalid url)
          content:
            application/json:
              example:
                error:
                  message: Invalid URL: not-a-valid-url
                  details: URL constructor failed
        '422':
          description: Could not determine avitoId from the provided URL/page
          content:
            application/json:
              example:
                error:
                  message: Unable to resolve avitoId from page content or URL
                  details: Empty avitoId or parse failure
        '500':
          description: Server error while resolving/creating
          content:
            application/json:
              examples:
                createFailed:
                  summary: Creation failed
                  value:
                    error:
                      message: Failed to create listing
                      details: E11000 duplicate key error
                resolveFailed:
                  summary: Resolve failed
                  value:
                    error:
                      message: Failed to fetch Avito details: Network timeout
                      details: Network timeout
  /listings/popular:
    get:
      summary: Get popular listings ordered by viewsCount desc
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Listing'
                  meta:
                    type: object
                    properties:
                      limit:
                        type: integer
              example:
                data:
                  - _id: 6710ba2bf1a5b0a9f3e1c789
                    url: https://www.avito.ru/item/1
                    canonicalUrl: https://www.avito.ru/item/1
                    avitoId: '111111111'
                    mainImageUrl: https://example.cdn.avito.ru/images/111111111.jpg
                    title: First listing
                    viewsCount: 120
                    createdAt: 2025-10-10T10:00:00.000Z
                    updatedAt: 2025-10-12T10:00:00.000Z
                  - _id: 6710ba3af1a5b0a9f3e1c790
                    url: https://www.avito.ru/item/2
                    canonicalUrl: https://www.avito.ru/item/2
                    avitoId: '222222222'
                    mainImageUrl: https://example.cdn.avito.ru/images/222222222.jpg
                    title: Second listing
                    viewsCount: 90
                    createdAt: 2025-10-09T09:00:00.000Z
                    updatedAt: 2025-10-11T09:00:00.000Z
                meta:
                  limit: 20
        '500':
          description: Server error
          content:
            application/json:
              example:
                error:
                  message: Unexpected error
                  details: Stack or message
  /listings/{id}:
    get:
      summary: Get listing by id and increment its viewsCount
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Listing ObjectId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Listing'
              example:
                data:
                  _id: 6710bb00f1a5b0a9f3e1c800
                  url: https://www.avito.ru/item/3
                  canonicalUrl: https://www.avito.ru/item/3
                  avitoId: '333333333'
                  mainImageUrl: https://example.cdn.avito.ru/images/333333333.jpg
                  title: Third listing
                  viewsCount: 51
                  createdAt: 2025-10-08T08:00:00.000Z
                  updatedAt: 2025-10-14T13:00:00.000Z
        '400':
          description: Invalid id
          content:
            application/json:
              example:
                error:
                  message: Invalid listing id
                  details: Bad ObjectId
        '404':
          description: Listing not found
          content:
            application/json:
              example:
                error:
                  message: Listing not found
                  details: No document with provided id
        '500':
          description: Server error
          content:
            application/json:
              example:
                error:
                  message: Unexpected error
                  details: Stack or message
  /listings/{id}/comments:
    get:
      summary: List comments for a listing (newest first)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Listing ObjectId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
              example:
                data:
                  - _id: 6710bc11f1a5b0a9f3e1c900
                    listingId: 6710bb00f1a5b0a9f3e1c800
                    authorName: Alex
                    text: Nice offer!
                    likesCount: 3
                    createdAt: 2025-10-14T13:05:00.000Z
                  - _id: 6710bc22f1a5b0a9f3e1c901
                    listingId: 6710bb00f1a5b0a9f3e1c800
                    authorName: Maria
                    text: Is it still available?
                    likesCount: 0
                    createdAt: 2025-10-14T13:10:00.000Z
        '400':
          description: Invalid id
          content:
            application/json:
              example:
                error:
                  message: Invalid listing id
                  details: Bad ObjectId
        '404':
          description: Listing not found
          content:
            application/json:
              example:
                error:
                  message: Listing not found
                  details: No document with provided id
        '500':
          description: Server error
          content:
            application/json:
              example:
                error:
                  message: Unexpected error
                  details: Stack or message
    post:
      summary: Create a comment for a listing
      description: |
        The server deterministically generates authorName from the provided nameKey using a stable algorithm.
        Backward compatibility: if legacy authorName is provided without nameKey, it will be used. If nameKey is present, authorName from the client is ignored.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Listing ObjectId
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [nameKey, text]
              properties:
                nameKey:
                  type: string
                  description: Ключ клиента для детерминированной генерации имени на сервере, стабильный в пределах сессии.
                  example: session-abc-123
                authorName:
                  type: string
                  deprecated: true
                  description: DEPRECATED. Ignored when nameKey is present. Kept only for backward compatibility with older clients.
                text:
                  type: string
                  example: Please contact me
            example:
              nameKey: session-abc-123
              text: Please contact me
      responses:
        '201':
          description: Comment created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Comment'
              example:
                data:
                  _id: 6710bd33f1a5b0a9f3e1c950
                  listingId: 6710bb00f1a5b0a9f3e1c800
                  authorName: Яркий Сокол
                  text: Please contact me
                  likesCount: 0
                  createdAt: 2025-10-14T13:20:00.000Z
        '400':
          description: Validation error
          content:
            application/json:
              examples:
                missingNameKey:
                  summary: Missing nameKey (and no legacy authorName)
                  value:
                    error:
                      message: Field "nameKey" is required
                      details: Missing nameKey
                missingText:
                  summary: Missing text
                  value:
                    error:
                      message: Field "text" is required
                      details: Empty text
        '404':
          description: Listing not found
          content:
            application/json:
              example:
                error:
                  message: Listing not found
                  details: No document with provided id
        '500':
          description: Server error
          content:
            application/json:
              example:
                error:
                  message: Unexpected error
                  details: Stack or message
  /listings/{id}/comments/popular:
    get:
      summary: List most popular comments for a listing
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Listing ObjectId
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 10
            default: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
              example:
                data:
                  - _id: 6710bc99f1a5b0a9f3e1c980
                    listingId: 6710bb00f1a5b0a9f3e1c800
                    authorName: Max
                    text: Лучший лот!
                    likesCount: 12
                    createdAt: 2025-10-14T13:00:00.000Z
                  - _id: 6710bc77f1a5b0a9f3e1c979
                    listingId: 6710bb00f1a5b0a9f3e1c800
                    authorName: Olga
                    text: Заберу сегодня
                    likesCount: 9
                    createdAt: 2025-10-14T12:59:00.000Z
        '400':
          description: Invalid id
          content:
            application/json:
              example:
                error:
                  message: Invalid listing id
                  details: Bad ObjectId
        '404':
          description: Listing not found
          content:
            application/json:
              example:
                error:
                  message: Listing not found
                  details: No document with provided id
        '500':
          description: Server error
          content:
            application/json:
              example:
                error:
                  message: Unexpected error
                  details: Stack or message
  /comments/{commentId}/like:
    post:
      summary: Put a like on a comment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: string
          description: Comment ObjectId
      responses:
        '200':
          description: Like added (idempotent or incremented)
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Comment'
              example:
                data:
                  _id: 6710bc11f1a5b0a9f3e1c900
                  listingId: 6710bb00f1a5b0a9f3e1c800
                  authorName: Alex
                  text: Nice offer!
                  likesCount: 4
                  createdAt: 2025-10-14T13:05:00.000Z
        '400':
          description: Invalid id
          content:
            application/json:
              example:
                error:
                  message: Invalid comment id
                  details: Bad ObjectId
        '404':
          description: Comment not found
          content:
            application/json:
              example:
                error:
                  message: Comment not found
                  details: No document with provided id
        '500':
          description: Server error
          content:
            application/json:
              example:
                error:
                  message: Unexpected error
                  details: Stack or message
  /comments/{commentId}/unlike:
    post:
      summary: Remove a like from a comment (not below zero)
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: string
          description: Comment ObjectId
      responses:
        '200':
          description: Like removed (floored at 0)
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Comment'
              example:
                data:
                  _id: 6710bc11f1a5b0a9f3e1c900
                  listingId: 6710bb00f1a5b0a9f3e1c800
                  authorName: Alex
                  text: Nice offer!
                  likesCount: 3
                  createdAt: 2025-10-14T13:05:00.000Z
        '400':
          description: Invalid id
          content:
            application/json:
              example:
                error:
                  message: Invalid comment id
                  details: Bad ObjectId
        '404':
          description: Comment not found
          content:
            application/json:
              example:
                error:
                  message: Comment not found
                  details: No document with provided id
        '500':
          description: Server error
          content:
            application/json:
              example:
                error:
                  message: Unexpected error
                  details: Stack or message
components:
  schemas:
    Listing:
      type: object
      properties:
        _id:
          type: string
          description: Mongo ObjectId
        url:
          type: string
        canonicalUrl:
          type: string
        avitoId:
          type: string
          description: Unique Avito listing id
        mainImageUrl:
          type: string
          description: Main image URL (from og:image)
        title:
          type: string
        viewsCount:
          type: integer
          minimum: 0
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Comment:
      type: object
      properties:
        _id:
          type: string
          description: Mongo ObjectId
        listingId:
          type: string
          description: Listing ObjectId
        authorName:
          type: string
        text:
          type: string
        likesCount:
          type: integer
          description: Number of likes for this comment
          minimum: 0
          default: 0
        createdAt:
          type: string
          format: date-time
